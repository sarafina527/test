#BlueJ class context
comment0.target=LocaleServiceProvider
comment0.text=\r\n\ <p>\r\n\ This\ is\ the\ super\ class\ of\ all\ the\ locale\ sensitive\ service\ provider\r\n\ interfaces\ (SPIs).\r\n\ <p>\r\n\ Locale\ sensitive\ \ service\ provider\ interfaces\ are\ interfaces\ that\r\n\ correspond\ to\ locale\ sensitive\ classes\ in\ the\ <code>java.text</code>\r\n\ and\ <code>java.util</code>\ packages.\ The\ interfaces\ enable\ the\r\n\ construction\ of\ locale\ sensitive\ objects\ and\ the\ retrieval\ of\r\n\ localized\ names\ for\ these\ packages.\ Locale\ sensitive\ factory\ methods\r\n\ and\ methods\ for\ name\ retrieval\ in\ the\ <code>java.text</code>\ and\r\n\ <code>java.util</code>\ packages\ use\ implementations\ of\ the\ provider\r\n\ interfaces\ to\ offer\ support\ for\ locales\ beyond\ the\ set\ of\ locales\r\n\ supported\ by\ the\ Java\ runtime\ environment\ itself.\r\n\ <p>\r\n\ <h4>Packaging\ of\ Locale\ Sensitive\ Service\ Provider\ Implementations</h4>\r\n\ Implementations\ of\ these\ locale\ sensitive\ services\ are\ packaged\ using\ the\r\n\ <a\ href\="../../../../technotes/guides/extensions/index.html">Java\ Extension\ Mechanism</a>\r\n\ as\ installed\ extensions.\ \ A\ provider\ identifies\ itself\ with\ a\r\n\ provider-configuration\ file\ in\ the\ resource\ directory\ META-INF/services,\r\n\ using\ the\ fully\ qualified\ provider\ interface\ class\ name\ as\ the\ file\ name.\r\n\ The\ file\ should\ contain\ a\ list\ of\ fully-qualified\ concrete\ provider\ class\ names,\r\n\ one\ per\ line.\ A\ line\ is\ terminated\ by\ any\ one\ of\ a\ line\ feed\ ('\\n'),\ a\ carriage\r\n\ return\ ('\\r'),\ or\ a\ carriage\ return\ followed\ immediately\ by\ a\ line\ feed.\ Space\r\n\ and\ tab\ characters\ surrounding\ each\ name,\ as\ well\ as\ blank\ lines,\ are\ ignored.\r\n\ The\ comment\ character\ is\ '\#'\ ('\#');\ on\ each\ line\ all\ characters\ following\r\n\ the\ first\ comment\ character\ are\ ignored.\ The\ file\ must\ be\ encoded\ in\ UTF-8.\r\n\ <p>\r\n\ If\ a\ particular\ concrete\ provider\ class\ is\ named\ in\ more\ than\ one\ configuration\r\n\ file,\ or\ is\ named\ in\ the\ same\ configuration\ file\ more\ than\ once,\ then\ the\r\n\ duplicates\ will\ be\ ignored.\ The\ configuration\ file\ naming\ a\ particular\ provider\r\n\ need\ not\ be\ in\ the\ same\ jar\ file\ or\ other\ distribution\ unit\ as\ the\ provider\ itself.\r\n\ The\ provider\ must\ be\ accessible\ from\ the\ same\ class\ loader\ that\ was\ initially\r\n\ queried\ to\ locate\ the\ configuration\ file;\ this\ is\ not\ necessarily\ the\ class\ loader\r\n\ that\ loaded\ the\ file.\r\n\ <p>\r\n\ For\ example,\ an\ implementation\ of\ the\r\n\ {@link\ java.text.spi.DateFormatProvider\ DateFormatProvider}\ class\ should\r\n\ take\ the\ form\ of\ a\ jar\ file\ which\ contains\ the\ file\:\r\n\ <pre>\r\n\ META-INF/services/java.text.spi.DateFormatProvider\r\n\ </pre>\r\n\ And\ the\ file\ <code>java.text.spi.DateFormatProvider</code>\ should\ have\r\n\ a\ line\ such\ as\:\r\n\ <pre>\r\n\ <code>com.foo.DateFormatProviderImpl</code>\r\n\ </pre>\r\n\ which\ is\ the\ fully\ qualified\ class\ name\ of\ the\ class\ implementing\r\n\ <code>DateFormatProvider</code>.\r\n\ <h4>Invocation\ of\ Locale\ Sensitive\ Services</h4>\r\n\ <p>\r\n\ Locale\ sensitive\ factory\ methods\ and\ methods\ for\ name\ retrieval\ in\ the\r\n\ <code>java.text</code>\ and\ <code>java.util</code>\ packages\ invoke\r\n\ service\ provider\ methods\ when\ needed\ to\ support\ the\ requested\ locale.\r\n\ The\ methods\ first\ check\ whether\ the\ Java\ runtime\ environment\ itself\r\n\ supports\ the\ requested\ locale,\ and\ use\ its\ support\ if\ available.\r\n\ Otherwise,\ they\ call\ the\ <code>getAvailableLocales()</code>\ methods\ of\r\n\ installed\ providers\ for\ the\ appropriate\ interface\ to\ find\ one\ that\r\n\ supports\ the\ requested\ locale.\ If\ such\ a\ provider\ is\ found,\ its\ other\r\n\ methods\ are\ called\ to\ obtain\ the\ requested\ object\ or\ name.\ \ When\ checking\r\n\ whether\ a\ locale\ is\ supported,\ the\ locale's\ extensions\ are\ ignored.\r\n\ If\ neither\ the\ Java\ runtime\ environment\ itself\ nor\ an\ installed\ provider\r\n\ supports\ the\ requested\ locale,\ the\ methods\ go\ through\ a\ list\ of\ candidate\r\n\ locales\ and\ repeat\ the\ availability\ check\ for\ each\ until\ a\ match\ is\ found.\r\n\ The\ algorithm\ used\ for\ creating\ a\ list\ of\ candidate\ locales\ is\ same\ as\r\n\ the\ one\ used\ by\ <code>ResourceBunlde</code>\ by\ default\ (see\r\n\ {@link\ java.util.ResourceBundle.Control\#getCandidateLocales\ getCandidateLocales}\r\n\ for\ the\ details).\ \ Even\ if\ a\ locale\ is\ resolved\ from\ the\ candidate\ list,\r\n\ methods\ that\ return\ requested\ objects\ or\ names\ are\ invoked\ with\ the\ original\r\n\ requested\ locale\ including\ extensions.\ \ The\ Java\ runtime\ environment\ must\r\n\ support\ the\ root\ locale\ for\ all\ locale\ sensitive\ services\ in\ order\ to\r\n\ guarantee\ that\ this\ process\ terminates.\r\n\ <p>\r\n\ Providers\ of\ names\ (but\ not\ providers\ of\ other\ objects)\ are\ allowed\ to\r\n\ return\ null\ for\ some\ name\ requests\ even\ for\ locales\ that\ they\ claim\ to\r\n\ support\ by\ including\ them\ in\ their\ return\ value\ for\r\n\ <code>getAvailableLocales</code>.\ Similarly,\ the\ Java\ runtime\r\n\ environment\ itself\ may\ not\ have\ all\ names\ for\ all\ locales\ that\ it\r\n\ supports.\ This\ is\ because\ the\ sets\ of\ objects\ for\ which\ names\ are\r\n\ requested\ can\ be\ large\ and\ vary\ over\ time,\ so\ that\ it's\ not\ always\r\n\ feasible\ to\ cover\ them\ completely.\ If\ the\ Java\ runtime\ environment\ or\ a\r\n\ provider\ returns\ null\ instead\ of\ a\ name,\ the\ lookup\ will\ proceed\ as\r\n\ described\ above\ as\ if\ the\ locale\ was\ not\ supported.\r\n\r\n\ @since\ \ \ \ \ \ \ \ 1.6\r\n
comment1.params=
comment1.target=LocaleServiceProvider()
comment1.text=\r\n\ Sole\ constructor.\ \ (For\ invocation\ by\ subclass\ constructors,\ typically\r\n\ implicit.)\r\n
comment2.params=
comment2.target=java.util.Locale[]\ getAvailableLocales()
comment2.text=\r\n\ Returns\ an\ array\ of\ all\ locales\ for\ which\ this\ locale\ service\ provider\r\n\ can\ provide\ localized\ objects\ or\ names.\r\n\ <p>\r\n\ <b>Note\:</b>\ Extensions\ in\ a\ <code>Locale</code>\ are\ ignored\ during\r\n\ service\ provider\ lookup.\ \ So\ the\ array\ returned\ by\ this\ method\ should\r\n\ not\ include\ two\ or\ more\ <code>Locale</code>\ objects\ only\ differing\ in\r\n\ their\ extensions.\r\n\r\n\ @return\ An\ array\ of\ all\ locales\ for\ which\ this\ locale\ service\ provider\r\n\ can\ provide\ localized\ objects\ or\ names.\r\n
numComments=3
